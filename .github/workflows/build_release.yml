################################################################################
# TaleCaster - https://github.com/rootwyrm/talecaster
# Copyright (C) 2015-* Phillip R. Jaenke <talecaster@rootwrym.com> and its
# contributors, all rights reserved.
#
# Licensed under CC-BY-NC-4.0
# See /LICENSE for details
################################################################################
name: CICD - Release Build
on:
  push:
    branches:
      - latest
      - release/*
    paths:
      - container/**
      - ci/**
    tags:
      - v1*
    repository_dispatch:
      types: [ relbuild ]
  workflow_dispatch:

## Restructure to build our cores separate...        
jobs:
  ############################################################
  # tc_docker, tc_mono
  ############################################################
  tc_docker:
    name: Release Build - tc_docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: [ tc_docker ]
    env:
      CONTAINER: ${{ matrix.container }}
    steps:
      - name: Check out from ${{ github.ref }}
        id: checkout
        uses: actions/checkout@v2
      - name: Test pre-build hooks
        id: hooks
        run: |
          $GITHUB_WORKSPACE/ci/hooks/pre_build
      - name: Set tag
        id: tag
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          [ "$VERSION" == "main" ] && VERSION=latest
          echo "::set-output name=VERSION::$(echo $VERSION)"
      - name: Setup qemu environment
        uses: docker/setup-qemu-action@v1
      - name: Setup buildx environment
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=-1 
      - name: Log into Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.HUB_USER }}
          password: ${{ secrets.HUB_TOKEN }}
      - name: Build ${{ matrix.container }}
        id: docker_push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          context: container/${{ matrix.container }}
          pull: true
          push: true
          tags: rootwyrm/${{ matrix.container }}:${{ steps.tag.outputs.VERSION }}
  tc_mono:
    name: Build Release - tc_mono
    runs-on: ubuntu-latest
    needs: tc_docker
    strategy:
      matrix:
        container: [ tc_mono ]
    env:
      CONTAINER: ${{ matrix.container }}
    steps:
      - name: Check out from ${{ github.ref }}
        id: checkout
        uses: actions/checkout@v2
      - name: Test pre-build hooks
        id: hooks
        run: |
          $GITHUB_WORKSPACE/ci/hooks/pre_build
      - name: Set tag
        id: tag
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          [ "$VERSION" == "main" ] && VERSION=latest
          echo "::set-output name=VERSION::$(echo $VERSION)"
      - name: Setup qemu environment
        uses: docker/setup-qemu-action@v1
      - name: Setup buildx environment
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=-1 
      - name: Log into Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.HUB_USER }}
          password: ${{ secrets.HUB_TOKEN }}
      - name: Build ${{ matrix.container }}
        id: docker_push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          context: container/${{ matrix.container }}
          pull: true
          push: true 
          tags: rootwyrm/${{ matrix.container }}:${{ steps.tag.outputs.VERSION }}
  ############################################################
  # tc_qbittorrent - takes 1hr+
  ############################################################
  tc_qbittorrent:
    name: Build Release - tc_qbittorrent
    runs-on: ubuntu-latest
    needs: tc_docker
    env:
      CONTAINER: tc_qbittorrent
    steps:
      - name: Check out from ${{ github.ref }}
        id: checkout
        uses: actions/checkout@v2
      - name: Test pre-build hooks
        id: hooks
        run: |
          $GITHUB_WORKSPACE/ci/hooks/pre_build
      - name: Set tag
        id: tag
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          [ "$VERSION" == "main" ] && VERSION=latest
          echo "::set-output name=VERSION::$(echo $VERSION)"
      - name: Setup qemu environment
        uses: docker/setup-qemu-action@v1
      - name: Setup buildx environment
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=-1 
      - name: Log into Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.HUB_USER }}
          password: ${{ secrets.HUB_TOKEN }}
      - name: Build tc_qbittorrent
        id: docker_push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          context: container/tc_qbittorrent
          pull: true
          push: true
          tags: rootwyrm/tc_qbittorrent:${{ steps.tag.outputs.VERSION }}
  ############################################################
  # tc_docker chidlren
  ############################################################
  tc_docker_child:
    name: Build Release - tc_docker children
    runs-on: ubuntu-latest
    needs: tc_docker
    strategy:
      matrix:
        container: [ tc_frontend, tc_nzbget, tc_transmission, tc_lidarr, tc_radarr, tc_jackett ]
    env:
      CONTAINER: ${{ matrix.container }}
    steps:
      - name: Check out from ${{ github.ref }}
        id: checkout
        uses: actions/checkout@v2
      - name: Test pre-build hooks
        id: hooks
        run: |
          $GITHUB_WORKSPACE/ci/hooks/pre_build
      - name: Set tag
        id: tag
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          [ "$VERSION" == "main" ] && VERSION=latest
          echo "::set-output name=VERSION::$(echo $VERSION)"
      - name: Setup qemu environment
        uses: docker/setup-qemu-action@v1
      - name: Setup buildx environment
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=-1 
      - name: Log into Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.HUB_USER }}
          password: ${{ secrets.HUB_TOKEN }}
      - name: Build ${{ matrix.container }}
        id: docker_push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          context: container/${{ matrix.container }}
          pull: true
          push: true
          tags: rootwyrm/${{ matrix.container }}:${{ steps.tag.outputs.VERSION }}
  ############################################################
  # tc_mono children
  ############################################################
  tc_mono_child:
    name: Build Release - tc_mono children
    runs-on: ubuntu-latest
    needs: tc_mono
    strategy:
      matrix:
        container: [ tc_sonarr ]
    env:
      CONTAINER: ${{ matrix.container }}
    steps:
      - name: Check out from ${{ github.ref }}
        id: checkout
        uses: actions/checkout@v2
      - name: Test pre-build hooks
        id: hooks
        run: |
          $GITHUB_WORKSPACE/ci/hooks/pre_build
      - name: Set tag
        id: tag
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          [ "$VERSION" == "main" ] && VERSION=latest
          echo "::set-output name=VERSION::$(echo $VERSION)"
      - name: Setup qemu environment
        uses: docker/setup-qemu-action@v1
      - name: Setup buildx environment
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=-1 
      - name: Log into Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.HUB_USER }}
          password: ${{ secrets.HUB_TOKEN }}
      - name: Build ${{ matrix.container }}
        id: docker_push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          context: container/${{ matrix.container }}
          pull: true
          push: true
          tags: rootwyrm/${{ matrix.container }}:${{ steps.tag.outputs.VERSION }}

# colorscheme=inkpot
# vim:ts=2:sw=2:et
