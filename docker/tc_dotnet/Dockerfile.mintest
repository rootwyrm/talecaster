ARG		${RELEASE:-edge}
FROM	alpine:${RELEASE}

## This is to be a high instrument, minimum component build
## Just to compile specific tests.
## No labels... okay just one
LABEL 	maintainer="Phillip 'RootWyrm' Jaenke <prj+docker@rootwyrm.com>"

RUN apk update && apk upgrade ; \
	mkdir -p /usr/local/src ; \
	echo "################################################################################"
	echo "#### Prerquisite Packages                                                   ####"
	echo "#### alpine:${matrix.alpine}                                                ####"
	echo "################################################################################"

	export APKADD="apk add --no-cache" ; \
	echo "Installation of pieces to install and build software" ; \
	APKADD --virtual vp_base bash curl gettext git openssl python3 wget zlib
	echo "Installation of software building components"	; \
	APKADD --virtual vp_build git gcc g++ libstdc++ curl-dev icu-dev zlib-dev cmake autoconf automake make libtool lttng-ust-dev icu-libs gettext gettext lttng-ust binutils openssl openssl-dev && \
	echo "################################################################################"
	echo "#### Clone the repository                                                  #####"
	echo "################################################################################"
	git clone https://github.com/dotnet/runtime.git /usr/local/src/runtime && \
	echo "################################################################################"
	echo "#### $(date) Build dotnet
	echo "################################################################################"
	cd /usr/local/src/runtime ; \
	./build.sh --os Linux -c Release --gcc 

