#!/usr/bin/env bash
################################################################################
# TaleCaster
# Copyright (C) 2015-* Phillip R. Jaenke <talecaster@rootwyrm.com> and its
# contributors. All rights reserved
# 
# Licensed under CC-BY-NC-4.0
# See /LICENSE for details
################################################################################
# application/bin/servarr_tools

. /opt/talecaster/lib/talecaster.lib.sh

## Tools for working with Servarr
# xml_extract_apikey $XMLFILE
function xml_extract_apikey()
{
	if [ -z $1 ]; then
		printf 'No XML file provided.\n'
		exit 2
	fi
	if [ -f $1 ]; then
		apikey=$(grep -oP '(?<=ApiKey>)[^<]+' $1)
		printf '%s\n' $apikey
	fi
}

# xml_extract_sslcert $XMLFILE
## XXX: key must be named identically to cert, suffix of .key
function xml_extract_sslcert()
{
	if [ -z $1 ]; then
		printf 'No XML file provided.\n'
		exit 2
	fi
	if [ -f $1 ]; then
		sslcert=$(grep -oP '(?<=SslCertPath>)[^<]+' $1)
		printf '%s\n' $sslcert
	fi
}

# xml_extract_urlbase $XMLFILE
function xml_extract_urlbase()
{
	if [ -z $1 ]; then
		printf 'No XML file provided.\n'
		exit 2
	fi
	if [ -f $1 ]; then
		urlbase=$(grep -oP '(?<=UrlBase>)[^<]+' $1)
		printf '%s\n' $urlbase
	fi
}

# xml_update_urlbase $XMLFILE /PATH
function xml_update_urlbase()
{
	if [ -z $1 ] || [ -z $2 ]; then
		printf 'No XML file or path provided.\n'
		exit 2
	fi
	if [ -f $1 ]; then
		urlbase=$(grep -oP '(?<=UrlBase>)[^<]+' $1)
		if [ "$2" == "$urlbase" ]; then
			## Already set correctly, do nothing.
			exit 0
		else
			sed -i -e 's,<UrlBase.*,<UrlBase>'$2'</UrlBase>,' $1
			CHECK_ERROR $? xml_update_urlbase
		fi
	else
		printf 'Configuration file %s missing.\n' $1
		exit 1
	fi
}

if [ -z $1 ]; then
	printf 'No command given.\n'
	exit 1
else
	$1 $2 $3
fi
